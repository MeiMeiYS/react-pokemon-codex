{"version":3,"sources":["components/PokemonData.js","components/Search.js","services/getPokemon.js","pages/home.js","App.js","index.js"],"names":["PokemonData","props","Container","className","Row","Col","xs","md","Card","Header","name","src","sprite","alt","Body","abilities","map","ability","key","types","type","stats","stat","ProgressBar","now","base_stat","max","label","Search","useState","search","setSearch","Form","FormControl","onChange","e","target","value","placeholder","Button","onClick","getPokemon","baseUrl","query","fetchPokemon","pokemon","a","fetch","spinnerStyle","width","height","borderWidth","SpinnerWrapperStyle","textAlign","marginTop","HomePage","setPokemon","loading","setLoading","error","setError","errorMsg","setErrorMsg","setTimeout","response","json","results","console","log","Alert","variant","style","Spinner","animation","sprites","front_default","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac495f6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Container, Row, Col, ProgressBar } from 'react-bootstrap';\r\n\r\nexport default function PokemonData(props) {\r\n    return(\r\n        <Container className='mt-2'>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <h5>{props.name}</h5>\r\n                            <img src={props.sprite} alt={props.name} />\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <h5>Abilities</h5>\r\n                            {props.abilities.map((ability, key) => (\r\n                                <div key={key}>\r\n                                    <span>{ability?.ability?.name}</span>\r\n                                </div>\r\n                            ))}\r\n                            <h5>Types</h5>\r\n                           {props.types[0].map((type, key) => (\r\n                               <div key={key}>\r\n                                   <span>{type?.type?.name}</span>\r\n                               </div>\r\n                           ))}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4>Base Stats</h4>\r\n                            {props.stats.map((stat, key) => (\r\n                                <div key={key}>\r\n                                    <strong>{stat.stat.name}</strong>\r\n                                    <ProgressBar now={stat.base_stat} max={255} label={stat.base_stat} />\r\n                                </div>\r\n                            ))}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Container, Form, Row, Col, FormControl, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function Search(props) {\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Form className='mt-2'>\r\n                <Row>\r\n                    <Col xs={10} className='my-1'>\r\n                        <FormControl \r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        placeholder='Search for Pokémon...' />\r\n                    </Col>\r\n                    <Col xs={2} className='my-1'>\r\n                        <Button className='block' onClick={(e) => props.getPokemon(search)} >Search</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}","const baseUrl = 'https://pokeapi.co/api/v2';\r\nconst query = {\r\n    pokemon: 'pokemon'\r\n}\r\nexport async function fetchPokemon(pokemon) {\r\n    return fetch (`${baseUrl}/${query.pokemon}/${pokemon}`)\r\n}","import React, { useState } from 'react';\r\nimport { Alert, Spinner } from 'react-bootstrap';\r\nimport PokemonData from '../components/PokemonData';\r\nimport Search from '../components/Search';\r\nimport { fetchPokemon } from '../services/getPokemon';\r\n\r\nconst spinnerStyle={\r\n    width: '10rem', \r\n    height: '10rem', \r\n    borderWidth: '0.9rem'\r\n};\r\nconst SpinnerWrapperStyle={\r\n    textAlign: 'center',\r\n    marginTop: '50px'\r\n}\r\n\r\nexport default function HomePage() {\r\n\r\n    const [pokemon, setPokemon] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const getPokemon = async (query) => {\r\n        if (!query) {\r\n            setErrorMsg('You must enter a pokémon name or ID.');\r\n            setError(true);\r\n            return;\r\n        };\r\n        setError(false);\r\n        setLoading(true);\r\n        setTimeout(async() => {\r\n            try{\r\n                const response = await fetchPokemon(query);\r\n                const results = await response.json();\r\n                setLoading(false);\r\n                setPokemon(results);\r\n            } catch (err){\r\n                console.log(err);\r\n                setLoading(false);\r\n                setErrorMsg('Pokémon not found.')\r\n                setError(true);\r\n            }\r\n        }, 1500);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {error ? (<Alert variant='danger'>{errorMsg}</Alert>) : null}\r\n            <Search getPokemon={getPokemon}/>\r\n            {loading ? (\r\n                <div style={SpinnerWrapperStyle}>\r\n                    <Spinner style={spinnerStyle} animation='border'/>\r\n                </div>) : null}\r\n            {!loading && pokemon ? (\r\n                <PokemonData \r\n                name={pokemon.name}\r\n                sprite={pokemon.sprites.front_default}\r\n                abilities={pokemon.abilities}\r\n                stats={pokemon.stats}\r\n                types={[pokemon.types]}\r\n                 />\r\n            ): null}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport HomePage from \"./pages/home\";\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}